#pragma checksum "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\Pages\Introduction\Four.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c2d88f20c083c115e92c6d489f97f0a9d4da4f5d"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorAdvance.Pages.Introduction
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using BlazorAdvance;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using BlazorAdvance.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using BlazorAdvance.Data.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Azeem Faisal\source\repos\BlazorAdvance\BlazorAdvance\_Imports.razor"
using BlazorAdvance.Data.Service;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/four")]
    public partial class Four : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Explain all binding .</h3>\r\n");
            __builder.AddMarkupContent(1, "<strong>Data Binding </strong>\r\n");
            __builder.AddMarkupContent(2, @"<p>
    Data binding is one of the most powerful features of software development technologies. Data binding is the connection bridge between View and the business logic (View Model) of the application. Following are the ways of doing data banding with Blazor.
    <ol>
        <li>
            One-way Data Binding
        </li>
        <li>
            Two-way Data Binding
        </li>
        <li>
            Event Binding
        </li>
    </ol>
</p>
");
            __builder.AddMarkupContent(3, "<strong>One way Binding</strong>\r\n");
            __builder.AddMarkupContent(4, @"<p>
    One-way data binding is also known as interpolation in other frameworks, such as Angular. It is very similar to Razor and also it will be quite straightforward. In one-way binding, we need to pass property or variable name along with  i.e. Name (here Name is either the property or variable).
</p>
");
            __builder.AddMarkupContent(5, "<strong>Two way Binding</strong>\r\n");
            __builder.AddMarkupContent(6, @"<p>
    Blazor now supports two-way binding. This can be achieved by using ""bind"" attribute. The current version of Blazor supports the following types for two-way binding.
    <ol>
        <li>
            string
        </li>
        <li>
            int
        </li>
        <li>
            DateTime
        </li>
        <li>
            Enum
        </li>
        <li>
            bool
        </li>
    </ol>
</p>
");
            __builder.AddMarkupContent(7, "<strong>Event Binding</strong>\r\n");
            __builder.AddMarkupContent(8, @"<p>
    The current version of Blazor, event binding is very limited. Currently, it only supports onclick and on change event. It is under development, so many more event support in the new version. Event binding is done by using function name along with  i.e. ButtonClicked (here ButtonClicked is function name).
</p>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SidebarService _sidebar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private StudentService _student { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navigation { get; set; }
    }
}
#pragma warning restore 1591
